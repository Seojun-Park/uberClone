[{"/Users/jinchulpark/react/uberClone/client/src/apollo/apollo.ts":"1","/Users/jinchulpark/react/uberClone/client/src/index.tsx":"2","/Users/jinchulpark/react/uberClone/client/src/apollo/authResolvers.ts":"3","/Users/jinchulpark/react/uberClone/client/src/Styles/GlobalStyles.ts":"4","/Users/jinchulpark/react/uberClone/client/src/Styles/Theme.ts":"5","/Users/jinchulpark/react/uberClone/client/src/Components/App.tsx":"6","/Users/jinchulpark/react/uberClone/client/src/Routes/AddPlace/index.ts":"7","/Users/jinchulpark/react/uberClone/client/src/Components/Routes.tsx":"8","/Users/jinchulpark/react/uberClone/client/src/Routes/FindAddress/FindAddressContainer.tsx":"9","/Users/jinchulpark/react/uberClone/client/src/Routes/Home/HomePresenter.tsx":"10","/Users/jinchulpark/react/uberClone/client/src/Routes/AuthHome/AuthHomePresenter.tsx":"11","/Users/jinchulpark/react/uberClone/client/src/Routes/AuthHome/AuthHomeStyles.tsx":"12","/Users/jinchulpark/react/uberClone/client/src/Routes/PhoneLogin/index.ts":"13","/Users/jinchulpark/react/uberClone/client/src/Routes/PhoneLogin/PhoneLoginPresenter.tsx":"14","/Users/jinchulpark/react/uberClone/client/src/Routes/PhoneLogin/PhoneLoginStyles.tsx":"15","/Users/jinchulpark/react/uberClone/client/src/Asset/countries.ts":"16","/Users/jinchulpark/react/uberClone/client/src/Routes/SocialLogin/SocialLoginPresenter.tsx":"17","/Users/jinchulpark/react/uberClone/client/src/Routes/EditAccount/index.ts":"18","/Users/jinchulpark/react/uberClone/client/src/Routes/Home/index.ts":"19","/Users/jinchulpark/react/uberClone/client/src/Routes/AuthHome/index.ts":"20","/Users/jinchulpark/react/uberClone/client/src/Routes/Places/index.ts":"21","/Users/jinchulpark/react/uberClone/client/src/Routes/Ride/index.ts":"22","/Users/jinchulpark/react/uberClone/client/src/Routes/Settings/index.ts":"23","/Users/jinchulpark/react/uberClone/client/src/Routes/FindAddress/index.ts":"24","/Users/jinchulpark/react/uberClone/client/src/Routes/AddPlace/AddPlaceContainer.tsx":"25","/Users/jinchulpark/react/uberClone/client/src/Routes/AddPlace/AddPlacePresenter.tsx":"26","/Users/jinchulpark/react/uberClone/client/src/Routes/FindAddress/FindAddressPresenter.tsx":"27","/Users/jinchulpark/react/uberClone/client/src/Hooks/BackArrow.tsx":"28","/Users/jinchulpark/react/uberClone/client/src/Routes/PhoneLogin/PhoneLoginContainer.tsx":"29","/Users/jinchulpark/react/uberClone/client/src/Hooks/useInput.tsx":"30","/Users/jinchulpark/react/uberClone/client/src/Routes/VerifyPhone/index.ts":"31","/Users/jinchulpark/react/uberClone/client/src/Routes/Ride/RideContainer.tsx":"32","/Users/jinchulpark/react/uberClone/client/src/Routes/Places/PlaceContainer.tsx":"33","/Users/jinchulpark/react/uberClone/client/src/Routes/Places/PlacePresenter.tsx":"34","/Users/jinchulpark/react/uberClone/client/src/Routes/EditAccount/EditAccountContainer.tsx":"35","/Users/jinchulpark/react/uberClone/client/src/Routes/Settings/SettingsContainer.tsx":"36","/Users/jinchulpark/react/uberClone/client/src/Routes/VerifyPhone/VerifyPhonePresenter.tsx":"37","/Users/jinchulpark/react/uberClone/client/src/Routes/Settings/SettingsPresenter.tsx":"38","/Users/jinchulpark/react/uberClone/client/src/Routes/Home/HomeContainer.tsx":"39","/Users/jinchulpark/react/uberClone/client/src/Routes/SocialLogin/SocialLoginStyles.tsx":"40","/Users/jinchulpark/react/uberClone/client/src/Routes/VerifyPhone/VerifyPhoneStyles.tsx":"41","/Users/jinchulpark/react/uberClone/client/src/Routes/VerifyPhone/VerifyPhoneContainer.tsx":"42","/Users/jinchulpark/react/uberClone/client/src/Components/Header/Header.tsx":"43","/Users/jinchulpark/react/uberClone/client/src/Components/Button/Button.tsx":"44","/Users/jinchulpark/react/uberClone/client/src/Routes/EditAccount/EditAccountPresenter.tsx":"45","/Users/jinchulpark/react/uberClone/client/src/Routes/Ride/RidePresenter.tsx":"46","/Users/jinchulpark/react/uberClone/client/src/Hooks/Select.tsx":"47","/Users/jinchulpark/react/uberClone/client/src/Components/Button/index.ts":"48","/Users/jinchulpark/react/uberClone/client/src/Components/Form/Form.tsx":"49","/Users/jinchulpark/react/uberClone/client/src/Components/Form/index.ts":"50","/Users/jinchulpark/react/uberClone/client/src/Routes/SocialLogin/SocialLoginContainer.tsx":"51","/Users/jinchulpark/react/uberClone/client/src/Routes/SocialLogin/index.ts":"52","/Users/jinchulpark/react/uberClone/client/src/Components/Header/index.ts":"53","/Users/jinchulpark/react/uberClone/client/src/Routes/PhoneLogin/PhoneQueries.ts":"54","/Users/jinchulpark/react/uberClone/client/src/Routes/VerifyPhone/VerifyPhoneQueries.ts":"55","/Users/jinchulpark/react/uberClone/client/src/Routes/SignUp/index.ts":"56","/Users/jinchulpark/react/uberClone/client/src/Routes/SignUp/SignUpPresenter.tsx":"57","/Users/jinchulpark/react/uberClone/client/src/Routes/SignUp/SignUpContainer.tsx":"58","/Users/jinchulpark/react/uberClone/client/src/Routes/SignUp/SignUpStyles.ts":"59","/Users/jinchulpark/react/uberClone/client/src/Routes/SignUp/SignUpQueries.ts":"60","/Users/jinchulpark/react/uberClone/client/src/Routes/SocialLogin/SocialLoginQueries.ts":"61","/Users/jinchulpark/react/uberClone/client/src/Routes/VerifyEmail/index.ts":"62","/Users/jinchulpark/react/uberClone/client/src/Routes/VerifyEmail/VerifyEmailPresenter.tsx":"63","/Users/jinchulpark/react/uberClone/client/src/Routes/VerifyEmail/VerifyEmailQueris.ts":"64","/Users/jinchulpark/react/uberClone/client/src/Routes/Home/HomeStyles.ts":"65","/Users/jinchulpark/react/uberClone/client/src/Routes/Menu/MenuPresenter.tsx":"66","/Users/jinchulpark/react/uberClone/client/src/Routes/Menu/MenuContainer.tsx":"67","/Users/jinchulpark/react/uberClone/client/src/Components/Input/index.ts":"68","/Users/jinchulpark/react/uberClone/client/src/Routes/Menu/MenuQueries.ts":"69","/Users/jinchulpark/react/uberClone/client/src/Routes/Menu/index.ts":"70","/Users/jinchulpark/react/uberClone/client/src/Routes/Menu/MenuStyles.ts":"71","/Users/jinchulpark/react/uberClone/client/src/Components/Input/inputStyles.ts":"72","/Users/jinchulpark/react/uberClone/client/src/Routes/EditAccount/EditAccountStyles.ts":"73","/Users/jinchulpark/react/uberClone/client/src/Routes/EditAccount/EditAccountQueries.ts":"74","/Users/jinchulpark/react/uberClone/client/src/Firebase/index.ts":"75","/Users/jinchulpark/react/uberClone/client/src/Components/ProgressBar/index.ts":"76","/Users/jinchulpark/react/uberClone/client/src/Components/ProgressBar/ProgressBar.tsx":"77","/Users/jinchulpark/react/uberClone/client/src/key.ts":"78","/Users/jinchulpark/react/uberClone/client/src/Components/Input/InputPresenter.tsx":"79","/Users/jinchulpark/react/uberClone/client/src/Routes/Settings/SettingsStyles.ts":"80","/Users/jinchulpark/react/uberClone/client/src/sharedQueries.ts":"81","/Users/jinchulpark/react/uberClone/client/src/Routes/AddPlace/AddPlaceStyles.ts":"82","/Users/jinchulpark/react/uberClone/client/src/Routes/AddPlace/AddPlaceQuery.ts":"83","/Users/jinchulpark/react/uberClone/client/src/Components/Place/PlaceComponentContainer.tsx":"84","/Users/jinchulpark/react/uberClone/client/src/Components/Place/index.ts":"85","/Users/jinchulpark/react/uberClone/client/src/Hooks/forceHistory.ts":"86","/Users/jinchulpark/react/uberClone/client/src/Components/Place/PlaceComponentPresenter.tsx":"87","/Users/jinchulpark/react/uberClone/client/src/Routes/Places/PlaceStyles.ts":"88","/Users/jinchulpark/react/uberClone/client/src/Components/Place/PlaceComponentQueries.ts":"89","/Users/jinchulpark/react/uberClone/client/src/Routes/FindAddress/FindAddressStyles.ts":"90","/Users/jinchulpark/react/uberClone/client/src/Hooks/MapHelper.ts":"91","/Users/jinchulpark/react/uberClone/client/src/Components/AddressBar/index.ts":"92","/Users/jinchulpark/react/uberClone/client/src/Components/AddressBar/AddressBar.tsx":"93","/Users/jinchulpark/react/uberClone/client/src/Components/PassengerHome/PassengerHomeContainer.tsx":"94","/Users/jinchulpark/react/uberClone/client/src/Components/PassengerHome/PassengerHomePresenter.tsx":"95","/Users/jinchulpark/react/uberClone/client/src/Components/PassengerHome/PassengerHomeStyles.ts":"96","/Users/jinchulpark/react/uberClone/client/src/Components/PassengerHome/PassengerHomeQueries.ts":"97"},{"size":1973,"mtime":1607706008662,"results":"98","hashOfConfig":"99"},{"size":306,"mtime":1607719936354,"results":"100","hashOfConfig":"99"},{"size":573,"mtime":1607872206507,"results":"101","hashOfConfig":"99"},{"size":446,"mtime":1607975755187,"results":"102","hashOfConfig":"99"},{"size":205,"mtime":1607962548215,"results":"103","hashOfConfig":"99"},{"size":948,"mtime":1607855947157,"results":"104","hashOfConfig":"99"},{"size":87,"mtime":1607722042505,"results":"105","hashOfConfig":"99"},{"size":2000,"mtime":1608555819411,"results":"106","hashOfConfig":"99"},{"size":3957,"mtime":1608508574522,"results":"107","hashOfConfig":"99"},{"size":1823,"mtime":1608561781159,"results":"108","hashOfConfig":"99"},{"size":1142,"mtime":1607872403365,"results":"109","hashOfConfig":"99"},{"size":1350,"mtime":1607771134915,"results":"110","hashOfConfig":"99"},{"size":93,"mtime":1607771290527,"results":"111","hashOfConfig":"99"},{"size":1801,"mtime":1607962171491,"results":"112","hashOfConfig":"99"},{"size":1033,"mtime":1607726087417,"results":"113","hashOfConfig":"99"},{"size":19499,"mtime":1607726259075,"results":"114","hashOfConfig":"99"},{"size":1163,"mtime":1607877782221,"results":"115","hashOfConfig":"99"},{"size":96,"mtime":1607721934917,"results":"116","hashOfConfig":"99"},{"size":76,"mtime":1608552153885,"results":"117","hashOfConfig":"99"},{"size":87,"mtime":1607724684707,"results":"118","hashOfConfig":"99"},{"size":78,"mtime":1607721426429,"results":"119","hashOfConfig":"99"},{"size":75,"mtime":1607721238639,"results":"120","hashOfConfig":"99"},{"size":87,"mtime":1607720897769,"results":"121","hashOfConfig":"99"},{"size":234,"mtime":1608454279351,"results":"122","hashOfConfig":"99"},{"size":2280,"mtime":1608503926077,"results":"123","hashOfConfig":"99"},{"size":1449,"mtime":1608503798716,"results":"124","hashOfConfig":"99"},{"size":1182,"mtime":1608503235493,"results":"125","hashOfConfig":"99"},{"size":758,"mtime":1607774287934,"results":"126","hashOfConfig":"99"},{"size":1853,"mtime":1607898839032,"results":"127","hashOfConfig":"99"},{"size":909,"mtime":1607961464960,"results":"128","hashOfConfig":"99"},{"size":96,"mtime":1607720536316,"results":"129","hashOfConfig":"99"},{"size":171,"mtime":1607721394796,"results":"130","hashOfConfig":"99"},{"size":646,"mtime":1608150726968,"results":"131","hashOfConfig":"99"},{"size":1040,"mtime":1608148105087,"results":"132","hashOfConfig":"99"},{"size":3237,"mtime":1608129957699,"results":"133","hashOfConfig":"99"},{"size":908,"mtime":1608150713218,"results":"134","hashOfConfig":"99"},{"size":1101,"mtime":1607879266986,"results":"135","hashOfConfig":"99"},{"size":1652,"mtime":1608151305697,"results":"136","hashOfConfig":"99"},{"size":6938,"mtime":1608561580400,"results":"137","hashOfConfig":"99"},{"size":486,"mtime":1607726611860,"results":"138","hashOfConfig":"99"},{"size":252,"mtime":1607960201125,"results":"139","hashOfConfig":"99"},{"size":1844,"mtime":1607880130960,"results":"140","hashOfConfig":"99"},{"size":736,"mtime":1607861328091,"results":"141","hashOfConfig":"99"},{"size":647,"mtime":1608577278171,"results":"142","hashOfConfig":"99"},{"size":1895,"mtime":1607987057020,"results":"143","hashOfConfig":"99"},{"size":112,"mtime":1607721356295,"results":"144","hashOfConfig":"99"},{"size":1056,"mtime":1607780458023,"results":"145","hashOfConfig":"99"},{"size":54,"mtime":1607861056221,"results":"146","hashOfConfig":"99"},{"size":352,"mtime":1607983445337,"results":"147","hashOfConfig":"99"},{"size":48,"mtime":1607862666412,"results":"148","hashOfConfig":"99"},{"size":1485,"mtime":1607877765530,"results":"149","hashOfConfig":"99"},{"size":94,"mtime":1607873357056,"results":"150","hashOfConfig":"99"},{"size":54,"mtime":1607861107792,"results":"151","hashOfConfig":"99"},{"size":218,"mtime":1607873689047,"results":"152","hashOfConfig":"99"},{"size":251,"mtime":1607873727177,"results":"153","hashOfConfig":"99"},{"size":82,"mtime":1607877155175,"results":"154","hashOfConfig":"99"},{"size":2272,"mtime":1607897318886,"results":"155","hashOfConfig":"99"},{"size":2445,"mtime":1607901852445,"results":"156","hashOfConfig":"99"},{"size":316,"mtime":1607962717091,"results":"157","hashOfConfig":"99"},{"size":632,"mtime":1607896865402,"results":"158","hashOfConfig":"99"},{"size":371,"mtime":1607873867825,"results":"159","hashOfConfig":"99"},{"size":96,"mtime":1607903592416,"results":"160","hashOfConfig":"99"},{"size":1666,"mtime":1608127966201,"results":"161","hashOfConfig":"99"},{"size":398,"mtime":1607952769555,"results":"162","hashOfConfig":"99"},{"size":591,"mtime":1608562091728,"results":"163","hashOfConfig":"99"},{"size":1344,"mtime":1607986559465,"results":"164","hashOfConfig":"99"},{"size":989,"mtime":1608127887578,"results":"165","hashOfConfig":"99"},{"size":61,"mtime":1607962040614,"results":"166","hashOfConfig":"99"},{"size":161,"mtime":1607957385873,"results":"167","hashOfConfig":"99"},{"size":75,"mtime":1607957257893,"results":"168","hashOfConfig":"99"},{"size":1602,"mtime":1607988626630,"results":"169","hashOfConfig":"99"},{"size":526,"mtime":1607962022724,"results":"170","hashOfConfig":"99"},{"size":2167,"mtime":1607984240619,"results":"171","hashOfConfig":"99"},{"size":328,"mtime":1607986463388,"results":"172","hashOfConfig":"99"},{"size":246,"mtime":1607975173079,"results":"173","hashOfConfig":"99"},{"size":87,"mtime":1607981624731,"results":"174","hashOfConfig":"99"},{"size":816,"mtime":1607984291919,"results":"175","hashOfConfig":"99"},{"size":400,"mtime":1608222803685,"results":"176","hashOfConfig":"99"},{"size":556,"mtime":1607962032577,"results":"177","hashOfConfig":"99"},{"size":836,"mtime":1608151336707,"results":"178","hashOfConfig":"99"},{"size":833,"mtime":1608575711922,"results":"179","hashOfConfig":"99"},{"size":763,"mtime":1608135257514,"results":"180","hashOfConfig":"99"},{"size":343,"mtime":1608133297232,"results":"181","hashOfConfig":"99"},{"size":1101,"mtime":1608151033438,"results":"182","hashOfConfig":"99"},{"size":105,"mtime":1608146481339,"results":"183","hashOfConfig":"99"},{"size":119,"mtime":1607986187526,"results":"184","hashOfConfig":"99"},{"size":1204,"mtime":1608151369205,"results":"185","hashOfConfig":"99"},{"size":210,"mtime":1608130443619,"results":"186","hashOfConfig":"99"},{"size":382,"mtime":1608147215359,"results":"187","hashOfConfig":"99"},{"size":1334,"mtime":1608561983905,"results":"188","hashOfConfig":"99"},{"size":2941,"mtime":1608486532019,"results":"189","hashOfConfig":"99"},{"size":66,"mtime":1608297132619,"results":"190","hashOfConfig":"99"},{"size":842,"mtime":1608297291661,"results":"191","hashOfConfig":"99"},{"size":8424,"mtime":1608575883610,"results":"192","hashOfConfig":"99"},{"size":2895,"mtime":1608576561972,"results":"193","hashOfConfig":"99"},{"size":702,"mtime":1608562811151,"results":"194","hashOfConfig":"99"},{"size":1069,"mtime":1608554533386,"results":"195","hashOfConfig":"99"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},"1a6d1a7",{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"213"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"216","messages":"217","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"219"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"204"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"225"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"225"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"247"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"225"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"267"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"225"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"281"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"225"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"247"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"213"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"225"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"225"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"281"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"225"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"281"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"213"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"267"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"225"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"225"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"247"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"225"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"247"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"225"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"225"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"213"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"225"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"213"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"225"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"225"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"391","messages":"392","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"225"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"399","usedDeprecatedRules":"204"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"402","messages":"403","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"404","messages":"405","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jinchulpark/react/uberClone/client/src/apollo/apollo.ts",[],["406","407"],"/Users/jinchulpark/react/uberClone/client/src/index.tsx",[],["408","409"],"/Users/jinchulpark/react/uberClone/client/src/apollo/authResolvers.ts",[],["410","411"],"/Users/jinchulpark/react/uberClone/client/src/Styles/GlobalStyles.ts",[],"/Users/jinchulpark/react/uberClone/client/src/Styles/Theme.ts",[],"/Users/jinchulpark/react/uberClone/client/src/Components/App.tsx",[],"/Users/jinchulpark/react/uberClone/client/src/Routes/AddPlace/index.ts",[],["412","413"],"/Users/jinchulpark/react/uberClone/client/src/Components/Routes.tsx",[],"/Users/jinchulpark/react/uberClone/client/src/Routes/FindAddress/FindAddressContainer.tsx",["414"],"import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport ReactDOM from 'react-dom'\nimport { RouteComponentProps } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { getAddress, getGeoCode, loadGoogleMapApi } from '../../Hooks/MapHelper';\nimport useInput from '../../Hooks/useInput';\nimport FindAddressPresenter from './FindAddressPresenter'\n\ninterface ICoords {\n    lat: number;\n    lng: number;\n}\n\ninterface IProps extends RouteComponentProps<any> {\n    google: any\n}\n\nconst FindAddressContainer: React.FC<IProps> = ({ history }) => {\n    const mapRef = useRef()\n    const [position, setPosition] = useState<ICoords>({ lat: 0, lng: 0 })\n    const [coords, setCoords] = useState<ICoords>({\n        lat: 0,\n        lng: 0\n    });\n    const [address, onChangeAddress, setAddress] = useInput(\"\")\n    const [map, setMap] = useState<google.maps.Map>()\n    const loadMap = useCallback((lat: number, lng: number) => {\n        const mapNode = ReactDOM.findDOMNode(mapRef.current);\n        const mapConfig: google.maps.MapOptions = {\n            center: { lat, lng },\n            disableDefaultUI: true,\n            minZoom: 8,\n            zoom: 15\n        };\n        setMap(new google.maps.Map(mapNode as Element, mapConfig))\n    }, [setMap])\n\n    useEffect(() => {\n        const getCurrentLocation = () => {\n            navigator.geolocation.getCurrentPosition(pos => {\n                const { coords: { latitude, longitude } } = pos;\n                setPosition({\n                    lat: latitude,\n                    lng: longitude\n                })\n                setCoords({\n                    lat: latitude,\n                    lng: longitude\n                })\n                loadMap(latitude, longitude);\n                if (map !== undefined) {\n                    map.panTo({ lat: latitude + 0.00001, lng: longitude + 0.00001 })\n                }\n            },\n                () => toast.error(\"Cannot find your location\"),\n                { enableHighAccuracy: true }\n            );\n        };\n        if (!window.google) {\n            loadGoogleMapApi(getCurrentLocation);\n        } else {\n            getCurrentLocation();\n        }\n    }, [])\n\n    useEffect(() => {\n        if (map) {\n            map.addListener(\"dragend\", () => setCoords({\n                lat: map.getCenter().lat(),\n                lng: map.getCenter().lng()\n            })\n            );\n            // map.addListener(\"drag\", () => setCoords({\n            //     lat: map.getCenter().lat(),\n            //     lng: map.getCenter().lng()\n            // }))\n            map.addListener(\"rightclick\", () => console.log(\"clicked\"))\n        }\n    }, [map])\n\n\n\n    const onPickHandler = async () => {\n        let result;\n        if (coords.lat === 0 || coords.lng === 0) {\n            result = await getAddress(position);\n        } else {\n            result = await getAddress(coords)\n        }\n        if (result) {\n            setAddress(result)\n        }\n    }\n\n    const submitFn = async () => {\n        const { lat, lng } = await getGeoCode(address);\n        if (lat && lng && map) {\n            map.panTo({ lat, lng })\n            const result = await getAddress({ lat, lng })\n            if (result) {\n                setAddress(result)\n            }\n        }\n    }\n\n    const onSubmit = () => {\n        history.push({\n            pathname: \"/addPlace\",\n            state: {\n                data: {\n                    address: address,\n                    lat: coords.lat,\n                    lng: coords.lng\n                }\n            }\n        })\n    }\n\n    return (\n        <div>\n            <FindAddressPresenter\n                mapRef={mapRef}\n                address={address}\n                onInputChange={onChangeAddress}\n                submitFn={submitFn}\n                onPickPlace={onPickHandler}\n                onSubmit={onSubmit}\n            />\n        </div>\n    )\n}\nexport default FindAddressContainer",["415","416"],"/Users/jinchulpark/react/uberClone/client/src/Routes/Home/HomePresenter.tsx",["417","418"],"import React, { FC, useEffect, useState } from 'react'\nimport Menu from '../Menu'\nimport Sidebar from 'react-sidebar'\nimport * as S from './HomeStyles'\nimport { ICoords } from '../../Hooks/MapHelper'\nimport PassengerHome from '../../Components/PassengerHome'\nimport Map from '../../Components/Map'\n\ntype HomeProps = {\n    map?: google.maps.Map<Element>;\n    userMarker?: google.maps.Marker\n    coords: ICoords;\n    user?: any;\n    isMenuOpen: boolean\n    toggleMenu: any\n    setMap: React.Dispatch<React.SetStateAction<google.maps.Map<Element> | undefined>>\n}\n\nconst HomePresenter: FC<HomeProps> = ({\n    isMenuOpen,\n    toggleMenu,\n    coords,\n    user,\n    map,\n    userMarker,\n    setMap\n}) => {\n    return (\n        <>\n            {user ?\n                <S.Container>\n                    <Sidebar\n                        sidebar={<Menu user={user} />}\n                        open={isMenuOpen}\n                        onSetOpen={toggleMenu}\n                        styles={{\n                            sidebar: {\n                                backgroundColor: \"white\",\n                                width: \"70%\",\n                                zIndex: \"10\"\n                            }\n                        }}\n                    >\n                        <S.Button onClick={() => toggleMenu()}>|||</S.Button>\n                    </Sidebar>\n                    {user!.isDriving ? (\n                        \"drivier\"\n                    ) : <PassengerHome\n                            map={map}\n                            marker={userMarker}\n                            coords={coords}\n                            user={user}\n                        />}\n                    <Map setMap={setMap} isHome={true} />\n                </S.Container > : \"loading...\"}\n        </>\n    )\n}\n\nexport default HomePresenter","/Users/jinchulpark/react/uberClone/client/src/Routes/AuthHome/AuthHomePresenter.tsx",[],["419","420"],"/Users/jinchulpark/react/uberClone/client/src/Routes/AuthHome/AuthHomeStyles.tsx",[],"/Users/jinchulpark/react/uberClone/client/src/Routes/PhoneLogin/index.ts",[],["421","422"],"/Users/jinchulpark/react/uberClone/client/src/Routes/PhoneLogin/PhoneLoginPresenter.tsx",[],"/Users/jinchulpark/react/uberClone/client/src/Routes/PhoneLogin/PhoneLoginStyles.tsx",[],"/Users/jinchulpark/react/uberClone/client/src/Asset/countries.ts",[],"/Users/jinchulpark/react/uberClone/client/src/Routes/SocialLogin/SocialLoginPresenter.tsx",[],"/Users/jinchulpark/react/uberClone/client/src/Routes/EditAccount/index.ts",[],"/Users/jinchulpark/react/uberClone/client/src/Routes/Home/index.ts",[],"/Users/jinchulpark/react/uberClone/client/src/Routes/AuthHome/index.ts",[],"/Users/jinchulpark/react/uberClone/client/src/Routes/Places/index.ts",[],["423","424"],"/Users/jinchulpark/react/uberClone/client/src/Routes/Ride/index.ts",[],"/Users/jinchulpark/react/uberClone/client/src/Routes/Settings/index.ts",[],["425","426"],"/Users/jinchulpark/react/uberClone/client/src/Routes/FindAddress/index.ts",[],"/Users/jinchulpark/react/uberClone/client/src/Routes/AddPlace/AddPlaceContainer.tsx",[],"/Users/jinchulpark/react/uberClone/client/src/Routes/AddPlace/AddPlacePresenter.tsx",[],"/Users/jinchulpark/react/uberClone/client/src/Routes/FindAddress/FindAddressPresenter.tsx",[],"/Users/jinchulpark/react/uberClone/client/src/Hooks/BackArrow.tsx",[],"/Users/jinchulpark/react/uberClone/client/src/Routes/PhoneLogin/PhoneLoginContainer.tsx",[],"/Users/jinchulpark/react/uberClone/client/src/Hooks/useInput.tsx",[],["427","428"],"/Users/jinchulpark/react/uberClone/client/src/Routes/VerifyPhone/index.ts",[],"/Users/jinchulpark/react/uberClone/client/src/Routes/Ride/RideContainer.tsx",[],"/Users/jinchulpark/react/uberClone/client/src/Routes/Places/PlaceContainer.tsx",[],"/Users/jinchulpark/react/uberClone/client/src/Routes/Places/PlacePresenter.tsx",[],"/Users/jinchulpark/react/uberClone/client/src/Routes/EditAccount/EditAccountContainer.tsx",[],["429","430"],"/Users/jinchulpark/react/uberClone/client/src/Routes/Settings/SettingsContainer.tsx",[],["431","432"],"/Users/jinchulpark/react/uberClone/client/src/Routes/VerifyPhone/VerifyPhonePresenter.tsx",[],"/Users/jinchulpark/react/uberClone/client/src/Routes/Settings/SettingsPresenter.tsx",[],"/Users/jinchulpark/react/uberClone/client/src/Routes/Home/HomeContainer.tsx",["433"],"/Users/jinchulpark/react/uberClone/client/src/Routes/SocialLogin/SocialLoginStyles.tsx",[],"/Users/jinchulpark/react/uberClone/client/src/Routes/VerifyPhone/VerifyPhoneStyles.tsx",[],"/Users/jinchulpark/react/uberClone/client/src/Routes/VerifyPhone/VerifyPhoneContainer.tsx",[],"/Users/jinchulpark/react/uberClone/client/src/Components/Header/Header.tsx",[],"/Users/jinchulpark/react/uberClone/client/src/Components/Button/Button.tsx",[],"/Users/jinchulpark/react/uberClone/client/src/Routes/EditAccount/EditAccountPresenter.tsx",[],"/Users/jinchulpark/react/uberClone/client/src/Routes/Ride/RidePresenter.tsx",[],"/Users/jinchulpark/react/uberClone/client/src/Hooks/Select.tsx",[],"/Users/jinchulpark/react/uberClone/client/src/Components/Button/index.ts",[],"/Users/jinchulpark/react/uberClone/client/src/Components/Form/Form.tsx",[],"/Users/jinchulpark/react/uberClone/client/src/Components/Form/index.ts",[],"/Users/jinchulpark/react/uberClone/client/src/Routes/SocialLogin/SocialLoginContainer.tsx",[],"/Users/jinchulpark/react/uberClone/client/src/Routes/SocialLogin/index.ts",[],"/Users/jinchulpark/react/uberClone/client/src/Components/Header/index.ts",[],"/Users/jinchulpark/react/uberClone/client/src/Routes/PhoneLogin/PhoneQueries.ts",[],"/Users/jinchulpark/react/uberClone/client/src/Routes/VerifyPhone/VerifyPhoneQueries.ts",[],"/Users/jinchulpark/react/uberClone/client/src/Routes/SignUp/index.ts",[],"/Users/jinchulpark/react/uberClone/client/src/Routes/SignUp/SignUpPresenter.tsx",[],"/Users/jinchulpark/react/uberClone/client/src/Routes/SignUp/SignUpContainer.tsx",[],"/Users/jinchulpark/react/uberClone/client/src/Routes/SignUp/SignUpStyles.ts",[],"/Users/jinchulpark/react/uberClone/client/src/Routes/SignUp/SignUpQueries.ts",[],"/Users/jinchulpark/react/uberClone/client/src/Routes/SocialLogin/SocialLoginQueries.ts",[],"/Users/jinchulpark/react/uberClone/client/src/Routes/VerifyEmail/index.ts",[],"/Users/jinchulpark/react/uberClone/client/src/Routes/VerifyEmail/VerifyEmailPresenter.tsx",[],"/Users/jinchulpark/react/uberClone/client/src/Routes/VerifyEmail/VerifyEmailQueris.ts",[],"/Users/jinchulpark/react/uberClone/client/src/Routes/Home/HomeStyles.ts",[],"/Users/jinchulpark/react/uberClone/client/src/Routes/Menu/MenuPresenter.tsx",[],"/Users/jinchulpark/react/uberClone/client/src/Routes/Menu/MenuContainer.tsx",[],"/Users/jinchulpark/react/uberClone/client/src/Components/Input/index.ts",[],"/Users/jinchulpark/react/uberClone/client/src/Routes/Menu/MenuQueries.ts",[],"/Users/jinchulpark/react/uberClone/client/src/Routes/Menu/index.ts",[],"/Users/jinchulpark/react/uberClone/client/src/Routes/Menu/MenuStyles.ts",[],"/Users/jinchulpark/react/uberClone/client/src/Components/Input/inputStyles.ts",[],"/Users/jinchulpark/react/uberClone/client/src/Routes/EditAccount/EditAccountStyles.ts",[],"/Users/jinchulpark/react/uberClone/client/src/Routes/EditAccount/EditAccountQueries.ts",[],"/Users/jinchulpark/react/uberClone/client/src/Firebase/index.ts",[],"/Users/jinchulpark/react/uberClone/client/src/Components/ProgressBar/index.ts",[],"/Users/jinchulpark/react/uberClone/client/src/Components/ProgressBar/ProgressBar.tsx",[],["434","435"],"/Users/jinchulpark/react/uberClone/client/src/key.ts",[],"/Users/jinchulpark/react/uberClone/client/src/Components/Input/InputPresenter.tsx",[],"/Users/jinchulpark/react/uberClone/client/src/Routes/Settings/SettingsStyles.ts",[],"/Users/jinchulpark/react/uberClone/client/src/sharedQueries.ts",[],"/Users/jinchulpark/react/uberClone/client/src/Routes/AddPlace/AddPlaceStyles.ts",[],"/Users/jinchulpark/react/uberClone/client/src/Routes/AddPlace/AddPlaceQuery.ts",[],"/Users/jinchulpark/react/uberClone/client/src/Components/Place/PlaceComponentContainer.tsx",[],"/Users/jinchulpark/react/uberClone/client/src/Components/Place/index.ts",[],"/Users/jinchulpark/react/uberClone/client/src/Hooks/forceHistory.ts",[],"/Users/jinchulpark/react/uberClone/client/src/Components/Place/PlaceComponentPresenter.tsx",[],"/Users/jinchulpark/react/uberClone/client/src/Routes/Places/PlaceStyles.ts",[],"/Users/jinchulpark/react/uberClone/client/src/Components/Place/PlaceComponentQueries.ts",[],"/Users/jinchulpark/react/uberClone/client/src/Routes/FindAddress/FindAddressStyles.ts",[],"/Users/jinchulpark/react/uberClone/client/src/Hooks/MapHelper.ts",[],"/Users/jinchulpark/react/uberClone/client/src/Components/AddressBar/index.ts",[],"/Users/jinchulpark/react/uberClone/client/src/Components/AddressBar/AddressBar.tsx",[],"/Users/jinchulpark/react/uberClone/client/src/Components/PassengerHome/PassengerHomeContainer.tsx",["436"],"import { useLazyQuery, useMutation, useQuery } from '@apollo/client';\nimport React, { FC, useState } from 'react';\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { generateMarker, getAddress, getGeoCode, ICoords, renderPath } from '../../Hooks/MapHelper';\nimport useInput from '../../Hooks/useInput';\nimport { UPDATE_RIDE_STATUS } from '../../sharedQueries';\nimport { GetNearbyDrivers, GetRide, GetRideVariables, RequestRide, RequestRideVariables, UpdateRideStatus, UpdateRideStatusVariables } from '../../types/api';\nimport PassengerHomePresenter from './PassengerHomePresenter'\nimport { REQUEST_RIDE, GET_NEARBY_DRIVERS, GET_RIDE } from './PassengerHomeQueries';\n\ninterface IProps extends RouteComponentProps {\n    map?: google.maps.Map<Element>;\n    marker?: google.maps.Marker;\n    coords: ICoords;\n    user: any\n}\n\nexport interface IRideVariables {\n    distance: string;\n    duration: string;\n    price: number;\n    rideImage: string;\n}\n\nconst PassengerHomeContaier: FC<IProps> = ({\n    map,\n    marker,\n    coords,\n    history,\n    user\n}) => {\n    const [placeMarker, setPlaceMarker] = useState<google.maps.Marker>();\n    const [driverMarker, setDriverMarker] = useState<google.maps.Marker[]>([])\n    const [directionRender, setDirectionRender] = useState<google.maps.DirectionsRenderer>()\n    const [ride, setRide] = useState<any>()\n    const [reqButton, setReqButton] = useState(false)\n    const [rideRequest, setRideRequest] = useState(false)\n    const [pickUpAddress, setPickupAddress] = useState(\"\")\n    const [address, onChangeAddress, setAddressInput] = useInput(\"\")\n    const [rideVariables, setRideVariables] = useState<IRideVariables>({\n        distance: \"\",\n        duration: \"\",\n        price: 0,\n        rideImage: \"\"\n    })\n    const [placeCoords, setPlaceCoords] = useState<ICoords>({ lat: 0, lng: 0 });\n    const [rideId, setRideId] = useState<number>();\n    const [fetchRideStatus, { stopPolling }] = useLazyQuery<GetRide, GetRideVariables>(GET_RIDE, {\n        fetchPolicy: \"cache-and-network\",\n        onCompleted: ({ GetRide }) => {\n            const { ok, err, ride } = GetRide\n            if (ok && ride) {\n                setRide(ride);\n                if (ride.status === \"ACCEPTED\") {\n                    // stopPolling();\n                    history.push(`/ride/${rideId}`)\n                }\n            } else {\n                if (err === \"Ride doesn't exist\") {\n                    // stopPolling();\n                } else {\n                    toast.error(err)\n                }\n            }\n        },\n        pollInterval: 500,\n        variables: {\n            rideId: rideId || -1\n        }\n    })\n\n    useQuery<GetNearbyDrivers>(GET_NEARBY_DRIVERS, {\n        fetchPolicy: \"cache-and-network\",\n        onCompleted: ({ GetNearbyDrivers: { drivers = [] } }) => {\n            if (drivers && drivers.length > 0 && map) {\n                if (driverMarker.length > drivers.length) {\n                    while (driverMarker.length > 0) {\n                        const marker = driverMarker.pop();\n                        if (marker) {\n                            marker.setMap(null)\n                        }\n                    }\n                    setDriverMarker(driverMarker)\n                }\n                for (const driver of drivers) {\n                    if (driver) {\n                        const existedDriver = driverMarker.find(driverMarker => driver.id === driverMarker.get(\"ID\"))\n                        const driverLocation: ICoords = {\n                            lat: driver.lastLat || 0,\n                            lng: driver.lastLng || 0\n                        };\n                        if (existedDriver) {\n                            existedDriver.setPosition(driverLocation);\n                            existedDriver.setMap(map);\n                        } else {\n                            const marker = generateMarker(map, driverLocation, {\n                                path: google.maps.SymbolPath.BACKWARD_CLOSED_ARROW,\n                                scale: 5\n                            });\n                            if (marker) {\n                                marker.set('ID', driver.id)\n                                driverMarker.push(marker);\n                                setDriverMarker(driverMarker)\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        pollInterval: 1000\n    })\n\n    const [requestRideMutation] = useMutation<RequestRide, RequestRideVariables>(REQUEST_RIDE, {\n        onCompleted: ({ RequestRide }) => {\n            const { ride } = RequestRide;\n            if (ride) {\n                setRideId(ride.id);\n                fetchRideStatus();\n            }\n            setReqButton(false);\n            setRideRequest(true);\n        },\n        variables: {\n            ...rideVariables,\n            dropOffAddress: address,\n            dropOffLat: placeCoords.lat,\n            dropOffLng: placeCoords.lng,\n            pickUpAddress,\n            pickUpLat: coords.lat,\n            pickUpLng: coords.lng\n        }\n    })\n\n    const [cancelRideMutation] = useMutation<UpdateRideStatus, UpdateRideStatusVariables>(UPDATE_RIDE_STATUS, {\n        onCompleted: () => {\n            setRideId(undefined);\n            setReqButton(false);\n        }\n    })\n\n    const findAddressByInput = async () => {\n        if (window.google && google && map) {\n            const userAddress = await getAddress(coords);\n            if (userAddress) {\n                setPickupAddress(userAddress);\n            }\n            const geoCode = await getGeoCode(address);\n            if (geoCode) {\n                renderPlaceMarker(geoCode);\n            }\n        }\n    }\n\n    const findAddressByGeoCode = async () => {\n        if (window.google && google && map) {\n            const userAddresss = await getAddress(coords);\n            if (userAddresss) {\n                setPickupAddress(userAddresss);\n            }\n            const targetGeoCode = {\n                lat: map.getCenter().lat(),\n                lng: map.getCenter().lng()\n            };\n            const placeAddress = await getAddress(targetGeoCode);\n            if (placeAddress) {\n                setAddressInput(placeAddress);\n                renderPlaceMarker(targetGeoCode);\n            }\n        }\n    };\n\n\n    const renderPlaceMarker = (targetGeoCode: ICoords) => {\n        if (map && marker) {\n            if (placeMarker) {\n                placeMarker.setPosition({ ...targetGeoCode });\n            } else {\n                const marker = generateMarker(map, targetGeoCode);\n                if (marker) {\n                    setPlaceMarker(marker)\n                }\n            }\n            setPlaceCoords(targetGeoCode);\n            const bounds = new google.maps.LatLngBounds();\n            bounds.extend(coords);\n            bounds.extend(targetGeoCode);\n            map.fitBounds(bounds);\n            if (directionRender) {\n                directionRender.setMap(null)\n            }\n            renderPath(map, coords, targetGeoCode, onRenderSuccess)\n        }\n    }\n\n    const onRenderSuccess = (routes: google.maps.DirectionsRoute[], directionRenderer: google.maps.DirectionsRenderer) => {\n        const { distance: { text: distance }, duration: { text: duration } } = routes[0].legs[0]\n        const price = parseFloat(distance.split(\" \")[0]) * 2;\n        setRideVariables({ ...rideVariables, distance, duration, price })\n        setReqButton(true);\n        setDirectionRender(directionRenderer);\n    }\n\n    const onClickHandlerByAddMode = async () => {\n        setReqButton(false);\n    }\n\n\n\n    return (\n        <PassengerHomePresenter\n            address={address}\n            onInputChange={onChangeAddress}\n            onClickHandlerByAddMode={onClickHandlerByAddMode}\n            findAddressByInput={findAddressByInput}\n            reqButton={reqButton}\n            requestRideMutation={requestRideMutation}\n            rideRequest={rideRequest}\n            rideVariables={rideVariables}\n            pickupAddress={pickUpAddress}\n            rideId={rideId}\n            stopPolling={stopPolling}\n            cancelRideMutation={cancelRideMutation}\n            setRideVariables={setRideVariables}\n            user={user}\n            ride={ride}\n        />\n    )\n}\n\nexport default withRouter(PassengerHomeContaier)","/Users/jinchulpark/react/uberClone/client/src/Components/PassengerHome/PassengerHomePresenter.tsx",["437","438"],"/Users/jinchulpark/react/uberClone/client/src/Components/PassengerHome/PassengerHomeStyles.ts",[],"/Users/jinchulpark/react/uberClone/client/src/Components/PassengerHome/PassengerHomeQueries.ts",[],{"ruleId":"439","replacedBy":"440"},{"ruleId":"441","replacedBy":"442"},{"ruleId":"439","replacedBy":"443"},{"ruleId":"441","replacedBy":"444"},{"ruleId":"439","replacedBy":"445"},{"ruleId":"441","replacedBy":"446"},{"ruleId":"439","replacedBy":"447"},{"ruleId":"441","replacedBy":"448"},{"ruleId":"449","severity":1,"message":"450","line":64,"column":8,"nodeType":"451","endLine":64,"endColumn":10,"suggestions":"452"},{"ruleId":"439","replacedBy":"453"},{"ruleId":"441","replacedBy":"454"},{"ruleId":"455","severity":1,"message":"456","line":1,"column":21,"nodeType":"457","messageId":"458","endLine":1,"endColumn":30},{"ruleId":"455","severity":1,"message":"459","line":1,"column":32,"nodeType":"457","messageId":"458","endLine":1,"endColumn":40},{"ruleId":"439","replacedBy":"460"},{"ruleId":"441","replacedBy":"461"},{"ruleId":"439","replacedBy":"462"},{"ruleId":"441","replacedBy":"463"},{"ruleId":"439","replacedBy":"464"},{"ruleId":"441","replacedBy":"465"},{"ruleId":"439","replacedBy":"466"},{"ruleId":"441","replacedBy":"467"},{"ruleId":"439","replacedBy":"468"},{"ruleId":"441","replacedBy":"469"},{"ruleId":"439","replacedBy":"470"},{"ruleId":"441","replacedBy":"471"},{"ruleId":"439","replacedBy":"472"},{"ruleId":"441","replacedBy":"473"},{"ruleId":"455","severity":1,"message":"474","line":73,"column":11,"nodeType":"457","messageId":"458","endLine":73,"endColumn":26},{"ruleId":"439","replacedBy":"475"},{"ruleId":"441","replacedBy":"476"},{"ruleId":"455","severity":1,"message":"477","line":155,"column":11,"nodeType":"457","messageId":"458","endLine":155,"endColumn":31},{"ruleId":"455","severity":1,"message":"478","line":4,"column":10,"nodeType":"457","messageId":"458","endLine":4,"endColumn":17},{"ruleId":"455","severity":1,"message":"479","line":44,"column":12,"nodeType":"457","messageId":"458","endLine":44,"endColumn":15},"no-native-reassign",["480"],"no-negated-in-lhs",["481"],["480"],["481"],["480"],["481"],["480"],["481"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'loadMap' and 'map'. Either include them or remove the dependency array.","ArrayExpression",["482"],["480"],["481"],"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.",["480"],["481"],["480"],["481"],["480"],["481"],["480"],["481"],["480"],["481"],["480"],["481"],["480"],["481"],"'minsAfterSignUp' is assigned a value but never used.",["480"],["481"],"'findAddressByGeoCode' is assigned a value but never used.","'getDate' is defined but never used.","'url' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"483","fix":"484"},"Update the dependencies array to be: [loadMap, map]",{"range":"485","text":"486"},[2198,2200],"[loadMap, map]"]